@page "/catalog"
@using Client.Services.Interfaces
@using Client.Shared
@inject NavigationManager Navigation
@inject IShoppingCartService CartService
@inject ICatalogService Service

<div class="container">
    <div class="row">
        <div class="col-md-12 scrollable-panel">
            <FilterAndSort OnSort="SortBooks" OnFilterByGenres="FilterBooksByGenre"></FilterAndSort>
        </div>

        <div class="col-md-9">
            <h1>Books</h1>

            <div class="w-100" style="margin-bottom: 30px">
                <label class="input-group">
                    <span class="input-group-text" style="cursor: pointer;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                            <path d="M11.742 9.344a5.5 5.5 0 1 0-1.397 1.398l3.86 3.86a1 1 0 0 0 1.415-1.416l-3.86-3.86zm-.342-3.968a4 4 0 1 1-6.468-1.47A4 4 0 0 1 11.4 5.376z" />
                        </svg>
                    </span>
                    <input type="text" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="search-addon" @bind="searchTerm" @oninput="SearchBooks" tabindex="1" autofocus />
                </label>
            </div>

            <!-- Pagination Section Below Search -->
            @if (pagination != null)
            {
                <nav aria-label="Page navigation" style="margin-bottom: 20px;">
                    <ul class="pagination justify-content-center">
                        <!-- Previous button -->
                        @if (pagination.HasPrevious)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.CurrentPage - 1)" aria-label="Previous">
                                    &lt;
                                </a>
                            </li>
                        }

                        <!-- Page numbers with ellipsis if necessary -->
                        @if (pagination.CurrentPage > 2)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(1)">1</a>
                            </li>
                            @if (pagination.CurrentPage > 3)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (int i = Math.Max(1, pagination.CurrentPage); i <= Math.Min(pagination.TotalPages, pagination.CurrentPage); i++)
                        {
                            <li class="page-item @(i == pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" @onclick="() => NavigateToPage(i)">@(i)</a>
                            </li>
                        }

                        @if (pagination.CurrentPage < pagination.TotalPages - 1)
                        {
                            @if (pagination.CurrentPage < pagination.TotalPages - 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.TotalPages)">@pagination.TotalPages</a>
                            </li>
                        }

                        <!-- Next button -->
                        @if (pagination.HasNext)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.CurrentPage + 1)" aria-label="Next">
                                    &gt;
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }

            <!-- Books Display Section -->
            <div class="row justify-content-center">
                @if (books.Any())
                {
                    @foreach (var book in books)
                    {
                        <a href="/bookdetails/@book.Title" class="col-6 col-sm-12 col-md-6 col-lg-4 col-xl-4 mh-25 mb-4 card-anchor">
                            <div class="card shadow-sm rounded">
                                <div class="card-body">
                                    <h5 class="card-title"><b>@TruncateTitle(book.Title, 50)</b></h5> <!-- Limit title to 50 characters -->
                                    <p class="card-subtitle mb-2 text-muted text-md-center">@book.Authors</p>
                                    <img src="@book.Image" alt="Book Cover" class="img-fluid">
                                </div>
                                <div class="mb-2 text-center">
                                    <a href="/reviews" class="text-decoration-none align-bottom">
                                        <span class="oi oi-comment-square"></span>
                                        Reviews
                                    </a>
                                </div>
                                <div class="card-footer text-muted d-flex justify-content-between flex-column flex-sm-row flex-xs-column">
                                    <div class="mb-md-0 text-center text-md-left">
                                        <span>$@($"{book.Price:F3}")</span> <!-- Format price to 3 decimal places -->
                                    </div>
                                    <div class="mb-md-0 text-center text-md-left">
                                        <span>Rating: @($"{book.RatingsCount}")</span>
                                    </div>
                                    <div class="d-flex align-items-center mb-2 mb-md-0 flex-sm-row">
                                        <form @onclick:preventDefault @onsubmit:stopPropagation>
                                            <button type="button" class="btn btn-primary btn-sm ms-2" @onclick="() => AddToCart(book)">
                                                <span class="oi oi-cart"></span>
                                                Buy
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p>No books available</p>
                }
            </div>

            <!-- Pagination again at the bottom (optional) -->
            @if (pagination != null)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <!-- Previous button -->
                        @if (pagination.HasPrevious)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.CurrentPage - 1)" aria-label="Previous">
                                    &lt;
                                </a>
                            </li>
                        }

                        <!-- Page numbers with ellipsis if necessary -->
                        @if (pagination.CurrentPage > 2)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(1)">1</a>
                            </li>
                            @if (pagination.CurrentPage > 3)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (int i = Math.Max(1, pagination.CurrentPage); i <= Math.Min(pagination.TotalPages, pagination.CurrentPage); i++)
                        {
                            <li class="page-item @(i == pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" @onclick="() => NavigateToPage(i)">@(i)</a>
                            </li>
                        }

                        @if (pagination.CurrentPage < pagination.TotalPages - 1)
                        {
                            @if (pagination.CurrentPage < pagination.TotalPages - 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.TotalPages)">@pagination.TotalPages</a>
                            </li>
                        }

                        <!-- Next button -->
                        @if (pagination.HasNext)
                        {
                            <li class="page-item">
                                <a class="page-link" @onclick="() => NavigateToPage(pagination.CurrentPage + 1)" aria-label="Next">
                                    &gt;
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>
