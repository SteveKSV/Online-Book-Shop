@inherits LayoutComponentBase
@using Client.Services.Interfaces
@using Microsoft.AspNetCore.Components
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>What To Read</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth">
            <div class="welcome-message">
                @if (UserIsAuthenticated)
                {
                    <span>Welcome,</span> <a href="/profile" class="profile-link">@UserName!</a>
                }
            </div>
            <div>
                <a href="cart" class="ms-3">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-cart3" viewBox="0 0 16 16">
                        <path d="M1 0.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .485.379l.825 3.3 1.871 7.484a.5.5 0 0 0 .485.384h6.086a.5.5 0 0 0 .485-.384l1.87-7.484.826-3.3a.5.5 0 0 1 .485-.38h1a.5.5 0 0 1 .478.658l-2 8A.5.5 0 0 1 14.5 12H4.95a.5.5 0 0 1-.477-.342l-2-8a.5.5 0 0 1 .477-.658h1.01a.5.5 0 0 1 .485.38l.247 1.004h7.527l-.51-2.04H3.165L2.655 1.5h10.032l.247 1.004h1.01a.5.5 0 0 1 .478.658l-2 8A.5.5 0 0 1 12.5 12H3.001a.5.5 0 0 1-.477-.342l-2-8A.5.5 0 0 1 1 3.5h.182L1 0.5zM14.5 13a1.5 1.5 0 0 0 0 3 1.5 1.5 0 0 0 0-3z" />
                    </svg>
                    Cart @if (ItemCount > 0)
                    {
                        <span class="badge bg-secondary">@ItemCount</span>
                    }
                </a>
                <AuthorizeView>
                    <Authorized>
                        <a href="logout" class="btn btn-link">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="login" class="btn btn-link">Login</a>
                        <a href="register" class="btn btn-link">Register</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool UserIsAuthenticated => authenticationState.User.Identity.IsAuthenticated;
    private string UserName => ShoppingCartService.GetUserNameFromClaims(authenticationState.User);

    [Inject] public IShoppingCartService ShoppingCartService { get; set; }
    public int ItemCount { get; set; }

    private AuthenticationState authenticationState;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ShoppingCartService.CartChanged += OnCartChanged;
        await UpdateItemCount();
    }

    private async Task UpdateItemCount()
    {
        ItemCount = await ShoppingCartService.GetItemCountAsync();
        StateHasChanged();
    }

    private async void OnCartChanged(object sender, EventArgs args)
    {
        await UpdateItemCount();
    }
}
