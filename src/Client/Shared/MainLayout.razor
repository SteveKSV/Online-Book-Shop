@inherits LayoutComponentBase
@using Client.Services.Interfaces
@using Microsoft.AspNetCore.Components
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>What To Read</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row">
            <div class="welcome-message">
                <AuthorizeView>
                    <Authorized>
                        <div class="d-flex align-items-center">
                            <i class="bi bi-person-circle me-2" style="font-size: 1.5rem;"></i>
                            <div>
                                <a href="/Identity/Account/Manage" class="text-decoration-none">Hello, @context.User.Identity?.Name!</a>
                                @if (context.User.IsInRole("Administrator"))
                                {
                                    <span class="badge bg-primary ms-2">Administrator</span>
                                }
                                else if (context.User.IsInRole("User"))
                                {
                                    <span class="badge bg-secondary ms-2">User</span>
                                }
                            </div>
                        </div>
                    </Authorized>
                </AuthorizeView>
            </div>

            <div class="d-flex align-items-center">
                <a href="cart" class="ms-3">
                    <span class="oi oi-cart"></span>
                    Cart @if (ItemCount > 0)
                    {
                        <span class="badge bg-secondary">@ItemCount</span>
                    }
                </a>
                <AuthorizeView>
                    <Authorized>
                        <form method="post" action="Identity/Account/LogOut" class="d-inline">
                            <button type="submit" class="nav-link btn btn-link">Log out</button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <a href="Identity/Account/Register" class="ms-3">Register</a>
                        <a href="Identity/Account/Login" class="ms-3">Log in</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    [Inject] public IShoppingCartService ShoppingCartService { get; set; }
    public int ItemCount { get; set; }

    private AuthenticationState authenticationState;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ShoppingCartService.CartChanged += OnCartChanged;
        await UpdateItemCount();
    }

    private async Task UpdateItemCount()
    {
        ItemCount = await ShoppingCartService.GetItemCountAsync();
        StateHasChanged();
    }

    private async void OnCartChanged(object sender, EventArgs args)
    {
        await UpdateItemCount();
    }
}
